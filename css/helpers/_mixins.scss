/**
 * Mixins
 * -----------------------------------------------------------------------------
 */

/**
  * Placeholders color
  * Usage:
    @include input-placeholder {
      color: $grey;
    }
  */
@mixin input-placeholder() {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

/**
  * Set a rem font size with pixel fallback
  * Usage: @include font-size(14px);
  */
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

/**
  * Clearfix for containing floats.
  * Usage: @include clearfix;
  */
@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

/**
  * Hides the text in an element.
  * Usage: @include hide-text;
  */
@mixin hide-text() {
  overflow: hidden;
  text-indent: 101%;
  white-space: nowrap;
}

/**
  * Provides a concise, one-line method for setting an element’s
  * positioning properties: `position`, `top`, `right`, `bottom`
  * and `left`. Use a `null` value to “skip” an edge of the box.
  * Usage: @include position(absolute, 10px, 20px, null, null);
  */
@mixin position($position, $box-edge-values) {
  $box-edge-values: _unpack-shorthand($box-edge-values);

  $offsets: (
    top:    nth($box-edge-values, 1),
    right:  nth($box-edge-values, 2),
    bottom: nth($box-edge-values, 3),
    left:   nth($box-edge-values, 4),
  );

  position: $position;

  @each $offset, $value in $offsets {
    @if _is-length($value) {
      #{$offset}: $value;
    }
  }
}

/**
  * Sizing shortcuts
  * Usage: @include size(200px, 100px);
  */
  @mixin size($width, $height: $width) {
    width: $width;
    height: $height;
  }

/**
  * Gradient
  * Usage: @include gradient(#ccc, #ddd);
  */
@mixin gradient($color-one, $color-two) {
  background: $color-one; // Fallback
  background: -webkit-linear-gradient(to left, $color-one, $color-two);
  background: linear-gradient(to left, $color-one, $color-two);
}

@mixin transition($transition...) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
          transition: $transition;
}

/* Media queries */
@mixin tablet {
  @media (min-width: #{$tablet-width}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktops-width}) {
    @content;
  }
}

@mixin tv {
  @media (min-width: #{$tv-width}) {
    @content;
  }
}
